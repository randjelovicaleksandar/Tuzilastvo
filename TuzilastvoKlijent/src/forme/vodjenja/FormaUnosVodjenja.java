/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.vodjenja;

import forme.GlavnaFormaKlijent;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import komunikacija.Komunikacija;
import model.Osumnjiceni;
import model.Predmet;
import model.Vodjenje;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Operacija;
import util.OperacijaForme;
import validacija.Validacija;

/**
 *
 * @author Aleksandar Randjelovic
 */
public class FormaUnosVodjenja extends javax.swing.JFrame {

    private Vodjenje vodjenje;
    private FormaPretragaVodjenja formaPretragaVodjenja;
    private GlavnaFormaKlijent glavnaFormaKlijent;


    public FormaUnosVodjenja(boolean btnUnesi, boolean btnObrisi, boolean btnIzmeni, JFrame forma) {
        initComponents();

        formaPretragaVodjenja = (FormaPretragaVodjenja) forma;

        jbtnUnesi.setEnabled(btnUnesi);
        jbtnObrisi.setEnabled(btnObrisi);
        jbtnIzmeni.setEnabled(btnIzmeni);

        postaviKomponente();

    }

    public FormaUnosVodjenja(boolean btnUnesi, boolean btnObrisi, boolean btnIzmeni) {
        initComponents();

        jbtnUnesi.setEnabled(btnUnesi);
        jbtnObrisi.setEnabled(btnObrisi);
        jbtnIzmeni.setEnabled(btnIzmeni);

        postaviKomponente();

    }

    public FormaUnosVodjenja(FormaPretragaVodjenja formaPretragaVodjenja) {
        initComponents();
        postaviKomponente();
        this.formaPretragaVodjenja = formaPretragaVodjenja;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jlblPredmet = new javax.swing.JLabel();
        jlblDatumDo = new javax.swing.JLabel();
        jlblOpis = new javax.swing.JLabel();
        jlblOsumnjiceni = new javax.swing.JLabel();
        jlbDatumOd = new javax.swing.JLabel();
        jdcDatumOd = new com.toedter.calendar.JDateChooser();
        jcmbOsumnjiceni = new javax.swing.JComboBox();
        jcmbPredmet = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextOpis = new javax.swing.JTextArea();
        jdcDatumDo = new com.toedter.calendar.JDateChooser();
        jbtnUnesi = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jbtnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unos vodjenja predmeta");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalji o vodjenju predmeta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N
        jPanel1.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setText("Predmet:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setText("Osumnjiceni:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setText("Datum od:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setText("Datum do:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setText("Opis:");

        jlblPredmet.setText(".");

        jlblDatumDo.setText(".");

        jlblOpis.setText(".");

        jlblOsumnjiceni.setText(".");

        jlbDatumOd.setText(".");

        jdcDatumOd.setDateFormatString("yyyy-MM-dd");
        jdcDatumOd.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        jcmbOsumnjiceni.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        jcmbPredmet.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        jTextOpis.setColumns(20);
        jTextOpis.setRows(5);
        jScrollPane1.setViewportView(jTextOpis);

        jdcDatumDo.setDateFormatString("yyyy-MM-dd");
        jdcDatumDo.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblDatumDo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlbDatumOd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblOsumnjiceni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlblPredmet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdcDatumOd, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                            .addComponent(jcmbPredmet, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcmbOsumnjiceni, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdcDatumDo, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblOpis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcmbPredmet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblPredmet)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcmbOsumnjiceni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlblOsumnjiceni)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jdcDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jlbDatumOd)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jdcDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblDatumDo)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlblOpis)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtnUnesi.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jbtnUnesi.setText("Unesi vodjenje");
        jbtnUnesi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUnesiActionPerformed(evt);
            }
        });

        jbtnObrisi.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jbtnObrisi.setText("Obrisi vodjenje");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jbtnIzmeni.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jbtnIzmeni.setText("Sacuvaj izmene");
        jbtnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnUnesi, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnUnesi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnUnesiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUnesiActionPerformed
        Predmet p = (Predmet) jcmbPredmet.getSelectedItem();
        Osumnjiceni o = (Osumnjiceni) jcmbOsumnjiceni.getSelectedItem();
        Date datumOd = jdcDatumOd.getDate();
        Date datumDo = jdcDatumDo.getDate();
        String opis = jTextOpis.getText();
    
        TransferObjekatZahtev zahtev = new TransferObjekatZahtev();
        try {
            if (validateFields()) {
                Vodjenje vodjenje = new Vodjenje(o, p, datumOd, datumDo, opis);
                zahtev.setOperacija(Operacija.UNOS_VODJENJA);
                zahtev.setParametar(vodjenje);
                Komunikacija.getInstance().posaljiZahtev(zahtev);
                TransferObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
                if (odgovor.getIzuzetak() == null) {
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio vodjenje!");
                    this.dispose();
                } else {
                    throw (Exception) odgovor.getIzuzetak();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jbtnUnesiActionPerformed

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        try {
            TransferObjekatZahtev zahtev = new TransferObjekatZahtev();
            zahtev.setOperacija(Operacija.BRISANJE_VODJENJA);
            zahtev.setParametar(vodjenje);
            Komunikacija.getInstance().posaljiZahtev(zahtev);
            TransferObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
            if (odgovor.getIzuzetak() == null) {
                JOptionPane.showMessageDialog(this, odgovor.getPoruka());
                formaPretragaVodjenja.obrisiRed(vodjenje);
                this.dispose();
            } else {
                throw (Exception) odgovor.getIzuzetak();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzmeniActionPerformed
        try {
            TransferObjekatZahtev zahtev = new TransferObjekatZahtev();
            if (validateFields()) {
                zahtev.setOperacija(Operacija.IZMENA_VODJENJA);
                Vodjenje vodjenjeIzmena = new Vodjenje(this.vodjenje.getVodjenjeID(),(Osumnjiceni) jcmbOsumnjiceni.getSelectedItem(), (Predmet) jcmbPredmet.getSelectedItem(), jdcDatumOd.getDate(), jdcDatumDo.getDate(), jTextOpis.getText());
                zahtev.setParametar(vodjenjeIzmena);
                Komunikacija.getInstance().posaljiZahtev(zahtev);
                TransferObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
                if (odgovor.getIzuzetak() == null) {
                    JOptionPane.showMessageDialog(this, odgovor.getPoruka());
                    formaPretragaVodjenja.izmeniRed(vodjenjeIzmena);
                    this.dispose();
                } else {
                    throw (Exception) odgovor.getIzuzetak();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jbtnIzmeniActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextOpis;
    private javax.swing.JButton jbtnIzmeni;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JButton jbtnUnesi;
    private javax.swing.JComboBox jcmbOsumnjiceni;
    private javax.swing.JComboBox jcmbPredmet;
    private com.toedter.calendar.JDateChooser jdcDatumDo;
    private com.toedter.calendar.JDateChooser jdcDatumOd;
    private javax.swing.JLabel jlbDatumOd;
    private javax.swing.JLabel jlblDatumDo;
    private javax.swing.JLabel jlblOpis;
    private javax.swing.JLabel jlblOsumnjiceni;
    private javax.swing.JLabel jlblPredmet;
    // End of variables declaration//GEN-END:variables

    private void postaviKomponente() {
        setLocationRelativeTo(null);
        this.setTitle("Unos osumnjicenog");
        this.repaint();
        this.pack();
        ucitajComboBox();
        podesiLabele(false);
    }

    void postaviIzgledForme(int operacijaForme) {
        if (operacijaForme == OperacijaForme.UPRAVLJANJE) {
            this.setTitle("Izmena/brisanje vodjenja");
            jbtnUnesi.setVisible(false);
            jbtnIzmeni.setVisible(true);
            jbtnObrisi.setVisible(true);
            this.repaint();
            this.pack();
        }
    }

    void postaviPodatkeOVodjenju(Vodjenje vodjenje) {
        this.vodjenje = vodjenje;
        
        jcmbOsumnjiceni.getModel().setSelectedItem(vodjenje.getOsumnjiceni());
        jcmbPredmet.getModel().setSelectedItem(vodjenje.getPredmet());
        jdcDatumOd.setDate(vodjenje.getDatumOd());
        jdcDatumDo.setDate(vodjenje.getDatumDo());
        jTextOpis.setText(vodjenje.getOpis());

    }

    public boolean validateFields() {

        podesiLabele(true);
        podesiVrednostLabela("");
        
        if (!Validacija.validateField(jTextOpis, jlblOpis, "Unesite polje za prezime")) {
            return false;
        } else if (!Validacija.validateField((JTextField) jdcDatumOd.getDateEditor().getUiComponent(), jlbDatumOd, "Izaberite polje za datum od")) {
            return false;
        } else if (!Validacija.validateField((JTextField) jdcDatumDo.getDateEditor().getUiComponent(), jlblDatumDo, "Izaberite polje za datum do")) {
            return false;
        } else {
            return true;
        }
    }

    public void ucitajComboBox() {
        try {
            jcmbPredmet.removeAllItems();

            TransferObjekatZahtev zahtev = new TransferObjekatZahtev();
            zahtev.setOperacija(Operacija.VRATI_PREDMETE);
            Komunikacija.getInstance().posaljiZahtev(zahtev);
            TransferObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
            if (odgovor.getIzuzetak() != null) {
                throw (Exception) odgovor.getIzuzetak();
            }
            List<Predmet> listaPredmeta = (List<Predmet>) odgovor.getRezultat();

            for (Predmet predmet : listaPredmeta) {
                jcmbPredmet.addItem(predmet);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Server je ugasen. Gasenje klijenta!");
            System.exit(0);
        }
        try {
            jcmbOsumnjiceni.removeAllItems();

            TransferObjekatZahtev zahtev = new TransferObjekatZahtev();
            zahtev.setOperacija(Operacija.VRATI_OSUMNJICENE);
            Komunikacija.getInstance().posaljiZahtev(zahtev);
            TransferObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
            if (odgovor.getIzuzetak() != null) {
                throw (Exception) odgovor.getIzuzetak();
            }
            List<Osumnjiceni> listaOsumnjicenih = (List<Osumnjiceni>) odgovor.getRezultat();

            for (Osumnjiceni osumnjiceni : listaOsumnjicenih) {
                jcmbOsumnjiceni.addItem(osumnjiceni);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Server je ugasen. Gasenje klijenta!");
            System.exit(0);
        }
    }

    private void podesiLabele(boolean bool) {
        jlblPredmet.setVisible(bool);
        jlblPredmet.revalidate();

        jlblOsumnjiceni.setVisible(bool);
        jlblOsumnjiceni.revalidate();

        jlbDatumOd.setVisible(bool);
        jlbDatumOd.revalidate();

        jlblOpis.setVisible(bool);
        jlblOpis.revalidate();

        jlblDatumDo.setVisible(bool);
        jlblDatumDo.revalidate();

        this.pack();
        this.repaint();
    }

    private void podesiVrednostLabela(String string) {
        jlblPredmet.setText(string);
        jlblOsumnjiceni.setText(string);
        jlbDatumOd.setText(string);
        jlblOpis.setText(string);
        jlblDatumDo.setText(string);

        this.pack();
        this.repaint();
    }

}
