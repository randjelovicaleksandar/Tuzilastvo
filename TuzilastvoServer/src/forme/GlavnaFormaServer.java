/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import forme.model.ModelTabeleKorisnici;
import java.awt.Color;

import javax.swing.JOptionPane;
import kontroler.Kontroler;
import nit.KlijentNit;
import nit.PokretanjeServera;

/**
 *
 * @author Aleksandar Randjelovic
 */
public class GlavnaFormaServer extends javax.swing.JFrame {

    private PokretanjeServera ps = null;
    private boolean konfigurisano = false;

    /**
     * Creates new form GlavnaForma
     */
    public GlavnaFormaServer() {
        initComponents();
        setLocationRelativeTo(null);
        postaviKomponente();
        postaviTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblAktivniKorisnici = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtPort = new javax.swing.JTextField();
        jbtnPokreniServer = new javax.swing.JButton();
        btnZaustavi = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jlblStatusServera = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tuzilastvo server");
        setResizable(false);

        jtblAktivniKorisnici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblAktivniKorisnici);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Trenutno ulogovani korisnici:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalji o serveru", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setText("Broj porta za pokretanje servera:");

        jtxtPort.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        jbtnPokreniServer.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jbtnPokreniServer.setText("Pokreni server");
        jbtnPokreniServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPokreniServerActionPerformed(evt);
            }
        });

        btnZaustavi.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnZaustavi.setText("Zaustavi server");
        btnZaustavi.setEnabled(false);
        btnZaustavi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZaustaviActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel7.setText("Status servera: ");

        jlblStatusServera.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jlblStatusServera.setText("jLabel8");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jlblStatusServera, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbtnPokreniServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnZaustavi, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnZaustavi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jlblStatusServera)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbtnPokreniServer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Konfigurisanje baze");
        jMenu1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        FormaKonfigurisanjeBaze formaKonfigurisanjeBaze = new FormaKonfigurisanjeBaze(this);
        formaKonfigurisanjeBaze.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void btnZaustaviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZaustaviActionPerformed
        if (ps == null) {
            JOptionPane.showMessageDialog(this, "Server nije pokrenut!");
        } else if (ps != null || ps.isAlive()) {
            Kontroler.getInstance().obrisiSveNiti();
            ps.zaustaviServer();
        }
    }//GEN-LAST:event_btnZaustaviActionPerformed

    private void jbtnPokreniServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPokreniServerActionPerformed
        if (jtxtPort.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate popuniti polje za PORT.");
            return;
        }
        if (jtxtPort.getText().trim().equals("80") || jtxtPort.getText().trim().equals("8080")) {
            JOptionPane.showMessageDialog(this, "Portovi 80 i 8080 nisu dozvoljeni, unesite neki drugi.", "Nevalidan PORT", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (konfigurisano) {
            JOptionPane.showMessageDialog(this, "Povezivanje na bazu podataka izvrseno je preko unetih podataka.");
        } else {
            JOptionPane.showMessageDialog(this, "Povezivanje na bazu podataka izvrseno je preko postojecih podataka. \nUkoliko zelite da promenite konfiguracione parametre,\n iskljucite server pa kliknite na 'Konfigurisanje baze'.", "Obavestenje",  JOptionPane.WARNING_MESSAGE);
        }

        try {
            Integer.parseInt(jtxtPort.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Morate popuniti polje za PORT.");
            return;
        }
        ps = new PokretanjeServera(this);
        ps.start();
    }//GEN-LAST:event_jbtnPokreniServerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnaFormaServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnaFormaServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnaFormaServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnaFormaServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlavnaFormaServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnZaustavi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnPokreniServer;
    private javax.swing.JLabel jlblStatusServera;
    private javax.swing.JTable jtblAktivniKorisnici;
    private javax.swing.JTextField jtxtPort;
    // End of variables declaration//GEN-END:variables

    public int vratiIzabraniPort() {
        return Integer.parseInt(jtxtPort.getText());
    }

    public void postaviStatusServera(String statusServera, boolean uspesno) {
        if (uspesno) {
            jlblStatusServera.setForeground(Color.GREEN);
        } else {
            jlblStatusServera.setForeground(Color.RED);
        }
        jlblStatusServera.setText(statusServera);
    }
    
    public void osveziDugmice(boolean logovan) {
        if(logovan) {
            jbtnPokreniServer.setEnabled(false);
            btnZaustavi.setEnabled(true);
        } else {
            jbtnPokreniServer.setEnabled(true);
            btnZaustavi.setEnabled(false);
        }
    }

    private void postaviKomponente() {
        jlblStatusServera.setText("Server nije pokrenut!");
    }

    private void postaviTabelu() {
        ModelTabeleKorisnici model = new ModelTabeleKorisnici();
        jtblAktivniKorisnici.setModel(model);
    }

    public void DodajRed(KlijentNit klijentskaNit) {
        ModelTabeleKorisnici model = (ModelTabeleKorisnici) jtblAktivniKorisnici.getModel();
        model.dodajRed(klijentskaNit);
    }

    public void obrisiRed(KlijentNit klijentNit) {
        ModelTabeleKorisnici model = (ModelTabeleKorisnici) jtblAktivniKorisnici.getModel();
        model.obrisiRed(klijentNit);
    }

    public void obrisiSveRedoveTabele() {
        ModelTabeleKorisnici model = (ModelTabeleKorisnici) jtblAktivniKorisnici.getModel();
        model.obrisiSveRedoveTabele();
    }

    void postavljenaKonfiguracijaBaze(boolean konfigurisano) {
        this.konfigurisano = konfigurisano;
    }
}
